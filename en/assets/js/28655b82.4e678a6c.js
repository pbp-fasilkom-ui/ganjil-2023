"use strict";(self.webpackChunk_pbp_fasilkom_ui_ganjil_2023=self.webpackChunk_pbp_fasilkom_ui_ganjil_2023||[]).push([[8407],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(a),h=i,c=u["".concat(l,".").concat(h)]||u[h]||d[h]||r;return a?n.createElement(c,o(o({ref:t},m),{},{components:a})):n.createElement(c,o({ref:t},m))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},501:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var n=a(7462),i=(a(7294),a(3905));const r={sidebar_label:"Lab 3"},o="Lab 3: Form, Authentication, Session and Cookie",s={unversionedId:"tutorial/tutorial-3",id:"tutorial/tutorial-3",title:"Lab 3: Form, Authentication, Session and Cookie",description:"Platform-Based Programming (CSGE602022) - Organized by Faculty of Computer Science Universitas Indonesia, Odd Semester 2022/2023",source:"@site/i18n/en/docusaurus-plugin-content-docs-assignments/current/tutorial/tutorial-3.md",sourceDirName:"tutorial",slug:"/tutorial/tutorial-3",permalink:"/ganjil-2023/en/assignments/tutorial/tutorial-3",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Lab 3"},sidebar:"tutorialSidebar",previous:{title:"Lab 2",permalink:"/ganjil-2023/en/assignments/tutorial/tutorial-2"},next:{title:"Lab 4",permalink:"/ganjil-2023/en/assignments/tutorial/tutorial-4"}},l={},p=[{value:"Learning Objectives",id:"learning-objectives",level:2},{value:"Introduction to HTTP",id:"introduction-to-http",level:2},{value:"Introduction to Cookies &amp; Session",id:"introduction-to-cookies--session",level:2},{value:"Tutorial: Creating a Registration Form",id:"tutorial-creating-a-registration-form",level:2},{value:"Tutorial: Creating a Login Form",id:"tutorial-creating-a-login-form",level:2},{value:"Tutorial: Creating a Logout Function",id:"tutorial-creating-a-logout-function",level:2},{value:"Tutorial: Restricting Wishlist Page Access",id:"tutorial-restricting-wishlist-page-access",level:2},{value:"Tutorial: Add <em>Cookies</em>",id:"tutorial-add-cookies",level:2},{value:"The Final Word",id:"the-final-word",level:2},{value:"Contributors",id:"contributors",level:2}],m={toc:p};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lab-3-form-authentication-session-and-cookie"},"Lab 3: Form, Authentication, Session and Cookie"),(0,i.kt)("p",null,"Platform-Based Programming (CSGE602022) - Organized by Faculty of Computer Science Universitas Indonesia, Odd Semester 2022/2023"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"learning-objectives"},"Learning Objectives"),(0,i.kt)("p",null,"After completing this tutorial, you are expected to be able to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Understand how to submit user-provided input using ",(0,i.kt)("inlineCode",{parentName:"li"},"<form>")," element"),(0,i.kt)("li",{parentName:"ul"},"Understand how authentication works"),(0,i.kt)("li",{parentName:"ul"},"Understand the purpose of cookie and session in the context of web development"),(0,i.kt)("li",{parentName:"ul"},"Understand how cookie and session work"),(0,i.kt)("li",{parentName:"ul"},"Use cookie and session in the context of web development")),(0,i.kt)("h2",{id:"introduction-to-http"},"Introduction to HTTP"),(0,i.kt)("p",null,"HTTP stands for ",(0,i.kt)("strong",{parentName:"p"},"HyperText Transfer Protocol"),". HTTP is a protocol used to communicate between client and server. HTTP is stateless; meaning that every transaction/activity performed is considered a completely new transaction/activity, thus no previous data is stored for the current transaction/activity."),(0,i.kt)("p",null,"Some basic concepts about HTTP:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Client/Server"),": Interaction is done between ",(0,i.kt)("em",{parentName:"p"},"client/server"),". The client makes a ",(0,i.kt)("em",{parentName:"p"},"request")," and the server provides a ",(0,i.kt)("em",{parentName:"p"},"response"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Stateless"),": Each activity (",(0,i.kt)("em",{parentName:"p"},"request/response"),") is independent.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"OSI Model/Layer"),": The Open Systems Interconnection (OSI) model describes seven layers that computer systems use to communicate over a network. The OSI 7-layer model consists of Application Layer, Presentation Layer, Session Layer, Transport Layer, Network Layer, Data Link Layer, and Physical Layer.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Application Layer"),": The website runs on the application layer. The ",(0,i.kt)("em",{parentName:"p"},"request/response")," process occurs at the transport layer which generally uses the TCP protocol which determines how the data will be sent. The application layer doesn't care what the transport layer does (how the data is sent, processed, etc.) because the application layer only focuses on the ",(0,i.kt)("em",{parentName:"p"},"request")," and ",(0,i.kt)("em",{parentName:"p"},"response"),"."),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"The rest of the layers will be taught on Computer Networks course. You can search it by yourself if you want. \ud83d\ude09"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Client Actions Method")),": This is the method used by the client when making a request. Example: GET, POST, PUT, DELETE, etc. A more detailed explanation can be read ",(0,i.kt)("a",{parentName:"p",href:"https://www.restapitutorial.com/lessons/httpmethods.html"},"here"),").")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Server Status Code")),": Is the status code given by the server when requesting a web page Example: 200 (OK), 404 (",(0,i.kt)("em",{parentName:"p"},"Page Not Found"),"), 500 (",(0,i.kt)("em",{parentName:"p"},"Internal Server Error"),"), etc. A more detailed explanation can be read ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status"},"here"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Headers")),": These are small pieces of information sent along with the ",(0,i.kt)("em",{parentName:"p"},"request")," and ",(0,i.kt)("em",{parentName:"p"},"response"),". They are useful as additional data used to process the ",(0,i.kt)("em",{parentName:"p"},"request/response"),". Example: In the ",(0,i.kt)("em",{parentName:"p"},"headers"),", there is ",(0,i.kt)("inlineCode",{parentName:"p"},"content-type:json"),". This means that the type of content requested/sent is ",(0,i.kt)("inlineCode",{parentName:"p"},"json"),". ",(0,i.kt)("em",{parentName:"p"},"Headers")," also stores ",(0,i.kt)("em",{parentName:"p"},"cookies")," data."))),(0,i.kt)("h2",{id:"introduction-to-cookies--session"},"Introduction to Cookies & Session"),(0,i.kt)("p",null,"All communication between client and server is done through HTTP protocol, where HTTP is a stateless protocol. This means that one state is not related to another (independent). This requires the client computer running the browser to establish a TCP connection to the server every time it makes a ",(0,i.kt)("em",{parentName:"p"},"request"),". Without a persistent connection between the client and the server, the software on each side (",(0,i.kt)("em",{parentName:"p"},"endpoint"),") cannot rely solely on the TCP connection to perform ",(0,i.kt)("em",{parentName:"p"},"holding state")," or ",(0,i.kt)("em",{parentName:"p"},"holding session state"),". What does ",(0,i.kt)("em",{parentName:"p"},"holding state")," mean?"),(0,i.kt)("p",null,"For example, you want to access page A on a website that requires the visitor to be logged in to the website. Then you ",(0,i.kt)("em",{parentName:"p"},"login")," to the web and successfully open page A. When you want to move to page B on the same web, without a ",(0,i.kt)("em",{parentName:"p"},"holding state")," process, you will be asked to ",(0,i.kt)("em",{parentName:"p"},"login"),' again. That will happen every time you access a different page while still on the same web. This process of telling "who" is currently ',(0,i.kt)("em",{parentName:"p"},"login")," and storing data is known as a form of client-server dialog. It is also the basis of ",(0,i.kt)("em",{parentName:"p"},"session")," - ",(0,i.kt)("em",{parentName:"p"},"a semi-permanent exchange of information"),". It is difficult to make HTTP do state-holding (because HTTP is a stateless protocol). Therefore, techniques are needed to overcome this problem, namely ",(0,i.kt)("em",{parentName:"p"},"Cookie")," and ",(0,i.kt)("em",{parentName:"p"},"Session"),"."),(0,i.kt)("p",null,"One of the most widely used ways to perform state-holding is to use a session ID that is stored as a cookie on the client computer. The ",(0,i.kt)("em",{parentName:"p"},"Session ID")," can be thought of as a ",(0,i.kt)("em",{parentName:"p"},"token")," (line of characters) to recognize a unique ",(0,i.kt)("em",{parentName:"p"},"session")," in a particular web application. Instead of storing all kinds of information as ",(0,i.kt)("em",{parentName:"p"},"cookies")," on the client such as ",(0,i.kt)("em",{parentName:"p"},"username"),", name, and password, only the ",(0,i.kt)("em",{parentName:"p"},"Session ID")," is stored. This ",(0,i.kt)("em",{parentName:"p"},"Session ID")," can then be mapped to a data structure on the web server side. In that data structure, you can store all the information you need. This approach is much safer for storing information about users, rather than storing it in a ",(0,i.kt)("em",{parentName:"p"},"cookie"),'. This way, the information cannot be misused by suspicious clients or connections. In addition, this approach is more "appropriate" if there is a lot of data to be stored. That\'s because cookies can only store a maximum of 4 KB of data. Imagine that you have logged in to a web/app and got a session ID (',(0,i.kt)("em",{parentName:"p"},"session identifier"),"). In order to be able to do ",(0,i.kt)("em",{parentName:"p"},"holding state")," on HTTP which is ",(0,i.kt)("em",{parentName:"p"},"stateless"),", browsers usually send a ",(0,i.kt)("em",{parentName:"p"},"session ID")," to the server on every ",(0,i.kt)("em",{parentName:"p"},"request"),". That way, every time a ",(0,i.kt)("em",{parentName:"p"},"request"),' comes, the server will react (more or less) "Oh, this is the right person!". Then the server will look up the ',(0,i.kt)("em",{parentName:"p"},"state")," information in the server memory or in the ",(0,i.kt)("em",{parentName:"p"},"database")," based on the ",(0,i.kt)("em",{parentName:"p"},"session ID")," obtained, and then return the requested data."),(0,i.kt)("p",null,"An important difference to keep in mind is that ",(0,i.kt)("em",{parentName:"p"},"cookie")," data is stored on the client side, while ",(0,i.kt)("em",{parentName:"p"},"session")," data is usually stored on the server side. For a more detailed discussion of stateless, stateful, ",(0,i.kt)("em",{parentName:"p"},"cookie"),", and ",(0,i.kt)("em",{parentName:"p"},"session"),", please read ",(0,i.kt)("a",{parentName:"p",href:"https://sethuramanmurali.wordpress.com/2013/07/07/stateful-stateless-cookie-and-session/"},"here"),"."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"th"},(0,i.kt)("em",{parentName:"strong"},"Cookies"))),(0,i.kt)("th",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"th"},(0,i.kt)("em",{parentName:"strong"},"Local Storage"))),(0,i.kt)("th",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"th"},(0,i.kt)("em",{parentName:"strong"},"Sessions"))))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Capacity")),(0,i.kt)("td",{parentName:"tr",align:null},"4 KB"),(0,i.kt)("td",{parentName:"tr",align:null},"5 MB"),(0,i.kt)("td",{parentName:"tr",align:null},"5 MB")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Browser technology")),(0,i.kt)("td",{parentName:"tr",align:null},"HTML4/HTML5"),(0,i.kt)("td",{parentName:"tr",align:null},"HTML5"),(0,i.kt)("td",{parentName:"tr",align:null},"HTML5")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Accessibility")),(0,i.kt)("td",{parentName:"tr",align:null},"All ",(0,i.kt)("em",{parentName:"td"},"window")),(0,i.kt)("td",{parentName:"tr",align:null},"All ",(0,i.kt)("em",{parentName:"td"},"window")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("em",{parentName:"td"},"Tab")," specific")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Expiration time")),(0,i.kt)("td",{parentName:"tr",align:null},"Manually set"),(0,i.kt)("td",{parentName:"tr",align:null},"No expiration time"),(0,i.kt)("td",{parentName:"tr",align:null},"when ",(0,i.kt)("em",{parentName:"td"},"tab")," is closed")))),(0,i.kt)("p",null,"Here are some links that can expand your knowledge related to this material:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=64veb6tKTm0&t=10s"},"Session & Cookies")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=I01XMRo2ESg"},"Cookies History")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=AwicscsvGLg"},"Cookies vs. Local Storage vs. Session"))),(0,i.kt)("h2",{id:"tutorial-creating-a-registration-form"},"Tutorial: Creating a Registration Form"),(0,i.kt)("p",null,"Notes: In this lab, you will use the project that you have created in the previous tutorial."),(0,i.kt)("p",null,"We will make the previously created wishlist page access to be restricted, with the aim that users who want to access the wishlist page must have an account and log in to the website in order to gain access."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run the virtual environment in the project")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"views.py")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist")," folder and create a function named ",(0,i.kt)("inlineCode",{parentName:"p"},"register")," that accepts a ",(0,i.kt)("inlineCode",{parentName:"p"},"request")," parameter.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Import ",(0,i.kt)("inlineCode",{parentName:"p"},"redirect"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"UserCreationForm"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"messages")," at the very top."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"from django.shortcuts import redirect\nfrom django.contrib.auth.forms import UserCreationForm\nfrom django.contrib import messages\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the code snippet below to the ",(0,i.kt)("inlineCode",{parentName:"p"},"register")," function you created earlier.\nIt is used to automatically generate a registration form and generate a user\naccount when data is ",(0,i.kt)("em",{parentName:"p"},"submitted")," from the form."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"def register(request):\n    form = UserCreationForm()\n\n    if request.method == \"POST\":\n        form = UserCreationForm(request.POST)\n        if form.is_valid():\n            form.save()\n            messages.success(request, 'Account successfully created!')\n            return redirect('wishlist:login')\n\n    context = {'form':form}\n    return render(request, 'register.html', context)\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create a new HTML file named ",(0,i.kt)("inlineCode",{parentName:"p"},"register.html")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist/templates")," folder.\nThe content of ",(0,i.kt)("inlineCode",{parentName:"p"},"register.html")," can be filled with the following ",(0,i.kt)("em",{parentName:"p"},"template")," example."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="./wishlist/templates/register.html"',title:'"./wishlist/templates/register.html"'},'{% extends \'base.html\' %}\n\n{% block meta %}\n<title>Account Registration</title>\n{% endblock meta %}\n\n{% block content %}\n\n<div class = "login">\n    <h1>Registration Form</h1>\n\n        <form method="POST" >\n            {% csrf_token %}\n            <table>\n                {{ form.as_table }}\n                <tr>\n                    <td></td>\n                    <td><input type="submit" name="submit" value="Register"/></td>\n                </tr>\n            </table>\n        </form>\n\n    {% if messages %}\n        <ul>\n            {% for message in messages %}\n                <li>{{ message }}</li>\n                {% endfor %}\n        </ul>\n    {% endif %}\n\n</div>\n\n{% endblock content %}\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"urls.py")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist")," folder and import the function you created earlier."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/urls.py"',title:'"./wishlist/urls.py"'},"from wishlist.views import register # Customize with the name of the function created\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add ",(0,i.kt)("em",{parentName:"p"},"path url")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"urlpatterns")," to route incoming request with matching URL\npattern (i.e. ",(0,i.kt)("inlineCode",{parentName:"p"},"/register/"),") to be handled by ",(0,i.kt)("inlineCode",{parentName:"p"},"register")," function:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/urls.py"',title:'"./wishlist/urls.py"'},"path('register/', register, name='register'), # Customize with the name of the function created\n")))),(0,i.kt)("p",null,"We have added an account registration form and created the ",(0,i.kt)("inlineCode",{parentName:"p"},"register")," mechanism. Next, we will create a ",(0,i.kt)("em",{parentName:"p"},"login")," form for users to authenticate their accounts."),(0,i.kt)("h2",{id:"tutorial-creating-a-login-form"},"Tutorial: Creating a Login Form"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"views.py")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist")," folder and create a function named ",(0,i.kt)("inlineCode",{parentName:"p"},"login_user")," that accepts a ",(0,i.kt)("inlineCode",{parentName:"p"},"request")," parameter.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add ",(0,i.kt)("em",{parentName:"p"},"import")," ",(0,i.kt)("inlineCode",{parentName:"p"},"authenticate")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"login")," at the very top."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"from django.contrib.auth import authenticate, login\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the code snippet below to the ",(0,i.kt)("inlineCode",{parentName:"p"},"login")," function you created earlier. This piece of code serves to authenticate users who want to ",(0,i.kt)("em",{parentName:"p"},"login"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"def login_user(request):\n    if request.method == 'POST':\n        username = request.POST.get('username')\n        password = request.POST.get('password')\n        user = authenticate(request, username=username, password=password)\n        if user is not None:\n            login(request, user)\n            return redirect('wishlist:show_wishlist')\n        else:\n            messages.info(request, 'Wrong Username or Password!')\n    context = {}\n    return render(request, 'login.html', context)\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create a new HTML file with the name ",(0,i.kt)("inlineCode",{parentName:"p"},"login.html")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist/templates")," folder. The content of ",(0,i.kt)("inlineCode",{parentName:"p"},"login.html")," can be filled with the following ",(0,i.kt)("em",{parentName:"p"},"template"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="./wishlist/templates/login.html"',title:'"./wishlist/templates/login.html"'},'{% extends \'base.html\' %}\n\n{% block meta %}\n<title>Login</title>\n{% endblock meta %}\n\n{% block content %}\n\n<div class = "login">\n\n    <h1>Login</h1>\n\n    <form method="POST" action="">\n        {% csrf_token %}\n        <table>\n            <tr>\n                <td>Username: </td>\n                <td><input type="text" name="username" placeholder="Username" class="form-control"></td>\n            </tr>\n\n            <tr>\n                <td>Password: </td>\n                <td><input type="password" name="password" placeholder="Password" class="form-control"></td>\n            </tr>\n\n            <tr>\n                <td></td>\n                <td><input class="btn login_btn" type="submit" value="Login"></td>\n            </tr>\n        </table>\n    </form>\n\n    {% if messages %}\n        <ul>\n            {% for message in messages %}\n                <li>{{ message }}</li>\n            {% endfor %}\n        </ul>\n    {% endif %}\n\n    Don\'t have an account? <a href="{% url \'wishlist:register\' %}">Create Account</a>\n\n</div>\n\n{% endblock content %}\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"urls.py")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist")," folder and import the function you created earlier."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/urls.py"',title:'"./wishlist/urls.py"'},"from wishlist.views import login_user  # Customize with the name of the function created\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add ",(0,i.kt)("em",{parentName:"p"},"path url")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"urlpatterns")," to associate incoming request containing\n",(0,i.kt)("inlineCode",{parentName:"p"},"login")," URL to be handled by ",(0,i.kt)("inlineCode",{parentName:"p"},"login_user")," function:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/urls.py"',title:'"./wishlist/urls.py"'},"path('login/', login_user, name='login'),  # Customize with the name of the function created\n")))),(0,i.kt)("p",null,"We have added the account's ",(0,i.kt)("em",{parentName:"p"},"login")," form and created the ",(0,i.kt)("inlineCode",{parentName:"p"},"login")," mechanism. Next, we will create a ",(0,i.kt)("em",{parentName:"p"},"logout")," mechanism and add a ",(0,i.kt)("em",{parentName:"p"},"logout")," button to the ",(0,i.kt)("em",{parentName:"p"},"wishlist")," page."),(0,i.kt)("h2",{id:"tutorial-creating-a-logout-function"},"Tutorial: Creating a Logout Function"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"views.py")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist")," folder and create a function named ",(0,i.kt)("inlineCode",{parentName:"p"},"logout_user")," that accepts the request parameter.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Import ",(0,i.kt)("inlineCode",{parentName:"p"},"logout")," function at the very top of ",(0,i.kt)("inlineCode",{parentName:"p"},"views.py")," file:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"from django.contrib.auth import logout\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the code snippet below into the ",(0,i.kt)("inlineCode",{parentName:"p"},"logout")," function you created earlier. This code snippet serves to perform the ",(0,i.kt)("em",{parentName:"p"},"logout")," mechanism."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"def logout_user(request):\n    logout(request)\n    return redirect('wishlist:login')\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist.html")," file in the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist/templates")," folder.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the code snippet below after the ",(0,i.kt)("em",{parentName:"p"},"end tag table")," (",(0,i.kt)("inlineCode",{parentName:"p"},"</table>"),") in the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist.html")," file. This code snippet serves to add a logout button."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="./wishlist/templates/wishlist.html"',title:'"./wishlist/templates/wishlist.html"'},"<button><a href=\"{% url 'wishlist:logout' %}\">Logout</a></button>\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"urls.py")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist")," folder and import the function you created earlier."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/urls.py"',title:'"./wishlist/urls.py"'},"from wishlist.views import logout_user  # Customize with the name of the function created\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the ",(0,i.kt)("em",{parentName:"p"},"url path")," into the ",(0,i.kt)("inlineCode",{parentName:"p"},"urlpatterns")," to handle incoming request toward ",(0,i.kt)("inlineCode",{parentName:"p"},"logout")," path:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/urls.py"',title:'"./wishlist/urls.py"'},"path('logout/', logout_user, name='logout'),  # Customize with the name of the function created\n")))),(0,i.kt)("p",null,"We have created a ",(0,i.kt)("inlineCode",{parentName:"p"},"logout")," mechanism and completed the authentication system on the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist")," project. Next, we will restrict ",(0,i.kt)("em",{parentName:"p"},"wishlist")," page access so that unauthenticated users cannot access the wishlist page."),(0,i.kt)("h2",{id:"tutorial-restricting-wishlist-page-access"},"Tutorial: Restricting Wishlist Page Access"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"views.py")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist")," folder and add ",(0,i.kt)("em",{parentName:"p"},"import")," ",(0,i.kt)("inlineCode",{parentName:"p"},"login_required"),"\nfunction at the very top."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"from django.contrib.auth.decorators import login_required\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the code ",(0,i.kt)("inlineCode",{parentName:"p"},"@login_required(login_url='/wishlist/login/')")," above the ",(0,i.kt)("inlineCode",{parentName:"p"},"show_wishlist")," function so that the ",(0,i.kt)("em",{parentName:"p"},"wishlist")," page can only be accessed by logged in (authenticated) users."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"@login_required(login_url='/wishlist/login/')\ndef show_wishlist(request):\n")))),(0,i.kt)("p",null,"After restricting wishlist page access, run your Django project with ",(0,i.kt)("inlineCode",{parentName:"p"},"python manage.py runserver")," command and open http://localhost:8000/wishlist in your favorite browser to see the results."),(0,i.kt)("h2",{id:"tutorial-add-cookies"},"Tutorial: Add ",(0,i.kt)("em",{parentName:"h2"},"Cookies")),(0,i.kt)("p",null,"Now, we'll see the use of ",(0,i.kt)("em",{parentName:"p"},"cookies")," with ",(0,i.kt)("em",{parentName:"p"},"last login")," data and display it to ",(0,i.kt)("em",{parentName:"p"},"wishlist")," page."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Please ",(0,i.kt)("em",{parentName:"p"},"logout")," first if you're running your Django application and already logged in.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"views.py")," that located in ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist")," folder and add ",(0,i.kt)("em",{parentName:"p"},"import")," ",(0,i.kt)("inlineCode",{parentName:"p"},"HttpResponseRedirect"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"reverse"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"datetime")," at the top of your file."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"import datetime\nfrom django.http import HttpResponseRedirect\nfrom django.urls import reverse\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In ",(0,i.kt)("inlineCode",{parentName:"p"},"login_user")," function. we'll add the function to add ",(0,i.kt)("em",{parentName:"p"},"cookie")," named ",(0,i.kt)("inlineCode",{parentName:"p"},"last_login")," to see when the was the last time a user logged in. Change the code in ",(0,i.kt)("inlineCode",{parentName:"p"},"if user is not None")," block to the following piece of code:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"if user is not None:\n    login(request, user) # login first\n    response = HttpResponseRedirect(reverse(\"wishlist:show_wishlist\")) # create response\n    response.set_cookie('last_login', str(datetime.datetime.now())) # create last_login cookie and add it to response\n    return response\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"show_wishlist")," function, add the snippet code below ",(0,i.kt)("inlineCode",{parentName:"p"},"show_wishlist"),",  ",(0,i.kt)("inlineCode",{parentName:"p"},"'last_login': request.COOKIES['last_login']")," t the ",(0,i.kt)("inlineCode",{parentName:"p"},"context")," variable. The following example is the code that already changed:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"context = {\n    'list_item': data_wishlist_item,\n    'name': 'Cinoy',\n    'last_login': request.COOKIES['last_login'],\n}\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Change ",(0,i.kt)("inlineCode",{parentName:"p"},"logout_user")," function to the following code snippet below. The following code will add ",(0,i.kt)("inlineCode",{parentName:"p"},"last_login")," ",(0,i.kt)("em",{parentName:"p"},"cookie")," removal mechanism when the user is logged out."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="./wishlist/views.py"',title:'"./wishlist/views.py"'},"def logout_user(request):\n    logout(request)\n    response = HttpResponseRedirect(reverse('wishlist:login'))\n    response.delete_cookie('last_login')\n    return response\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist.html")," file and add the following code snippet below between the table and the ",(0,i.kt)("em",{parentName:"p"},"logout")," button to display the ",(0,i.kt)("em",{parentName:"p"},"last login")," information."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="./wishlist/templates/wishlist.html"',title:'"./wishlist/templates/wishlist.html"'},"<h5>Last Login: {{ last_login }}</h5>\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Please ",(0,i.kt)("em",{parentName:"p"},"refresh")," your ",(0,i.kt)("em",{parentName:"p"},"login")," page (or run your Django project with the command ",(0,i.kt)("inlineCode",{parentName:"p"},"python manage.py runserver")," if you haven't run your project yet) and try to ",(0,i.kt)("em",{parentName:"p"},"login"),". The  ",(0,i.kt)("em",{parentName:"p"},"last login")," information will display in the ",(0,i.kt)("inlineCode",{parentName:"p"},"wishlist")," page.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To see the data of ",(0,i.kt)("inlineCode",{parentName:"p"},"last_login")," cookie, you can access the feature of ",(0,i.kt)("em",{parentName:"p"},"inspect element")," and open the ",(0,i.kt)("em",{parentName:"p"},"Application/Storage")," tab. Click ",(0,i.kt)("em",{parentName:"p"},"Cookies")," and you'll see the available ",(0,i.kt)("em",{parentName:"p"},"cookies")," data. Besides ",(0,i.kt)("inlineCode",{parentName:"p"},"last_login"),", you can also view ",(0,i.kt)("inlineCode",{parentName:"p"},"sessionid")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"csrftoken")," data. Here is an example of how it looks."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("img",{parentName:"p",src:"https://cdn.discordapp.com/attachments/793469428809465886/1021921104601829476/unknown.png",alt:"Picture of Wishlist Page and the cookies data"}))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If you ",(0,i.kt)("em",{parentName:"p"},"logout")," from your application and open the ",(0,i.kt)("em",{parentName:"p"},"cookie")," history, you'll see that the ",(0,i.kt)("em",{parentName:"p"},"cookie")," that you created before was removed and will be remade when you ",(0,i.kt)("em",{parentName:"p"},"login")," again."))),(0,i.kt)("h2",{id:"the-final-word"},"The Final Word"),(0,i.kt)("p",null,"Congratulations! You have successfully completed Tutorial 3. \ud83d\ude04"),(0,i.kt)("p",null,"After you finished the whole tutorial above, I hope you now understand more about using ",(0,i.kt)("em",{parentName:"p"},"form"),", authentication, ",(0,i.kt)("em",{parentName:"p"},"session"),", and ",(0,i.kt)("em",{parentName:"p"},"cookie")," in Django's ",(0,i.kt)("em",{parentName:"p"},"framework"),"."),(0,i.kt)("p",null,"As always, don't forget to ",(0,i.kt)("inlineCode",{parentName:"p"},"add"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"commit"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"push")," the changes you made to save them to the GitHub repository before you close your job. \ud83d\ude09"),(0,i.kt)("h2",{id:"contributors"},"Contributors"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Muhammad Athallah"),(0,i.kt)("li",{parentName:"ul"},"Muhammad Azis Husein"),(0,i.kt)("li",{parentName:"ul"},"Zuhal 'Alimul Hadi"),(0,i.kt)("li",{parentName:"ul"},"Winaldo Amadea (EN Translator)"),(0,i.kt)("li",{parentName:"ul"},"Firlandi A. R. Ansyari (EN Translator)")))}d.isMDXComponent=!0}}]);