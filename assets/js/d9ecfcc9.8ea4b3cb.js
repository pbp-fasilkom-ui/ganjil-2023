"use strict";(self.webpackChunk_pbp_fasilkom_ui_ganjil_2023=self.webpackChunk_pbp_fasilkom_ui_ganjil_2023||[]).push([[9200],{3905:(a,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>s});var t=n(7294);function i(a,e,n){return e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function r(a,e){var n=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),n.push.apply(n,t)}return n}function l(a){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(a,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(n,e))}))}return a}function o(a,e){if(null==a)return{};var n,t,i=function(a,e){if(null==a)return{};var n,t,i={},r=Object.keys(a);for(t=0;t<r.length;t++)n=r[t],e.indexOf(n)>=0||(i[n]=a[n]);return i}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(t=0;t<r.length;t++)n=r[t],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(a,n)&&(i[n]=a[n])}return i}var m=t.createContext({}),p=function(a){var e=t.useContext(m),n=e;return a&&(n="function"==typeof a?a(e):l(l({},e),a)),n},u=function(a){var e=p(a.components);return t.createElement(m.Provider,{value:e},a.children)},d={inlineCode:"code",wrapper:function(a){var e=a.children;return t.createElement(t.Fragment,{},e)}},k=t.forwardRef((function(a,e){var n=a.components,i=a.mdxType,r=a.originalType,m=a.parentName,u=o(a,["components","mdxType","originalType","parentName"]),k=p(n),s=i,g=k["".concat(m,".").concat(s)]||k[s]||d[s]||r;return n?t.createElement(g,l(l({ref:e},u),{},{components:n})):t.createElement(g,l({ref:e},u))}));function s(a,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof a||i){var r=n.length,l=new Array(r);l[0]=k;var o={};for(var m in e)hasOwnProperty.call(e,m)&&(o[m]=e[m]);o.originalType=a,o.mdxType="string"==typeof a?a:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}k.displayName="MDXCreateElement"},2017:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var t=n(7462),i=(n(7294),n(3905));const r={sidebar_label:"Lab 7"},l="Lab 7: Flutter Navigation, Input, dan Form",o={unversionedId:"tutorial/tutorial-7",id:"tutorial/tutorial-7",title:"Lab 7: Flutter Navigation, Input, dan Form",description:"Pemrograman Berbasis Platform (CSGE602022) - diselenggarakan oleh Fakultas Ilmu Komputer, Universitas Indonesia, Semester Ganjil 2022/2023",source:"@site/assignments/tutorial/tutorial-7.md",sourceDirName:"tutorial",slug:"/tutorial/tutorial-7",permalink:"/ganjil-2023/assignments/tutorial/tutorial-7",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Lab 7"},sidebar:"tutorialSidebar",previous:{title:"Lab 6",permalink:"/ganjil-2023/assignments/tutorial/tutorial-6"},next:{title:"Lab 8",permalink:"/ganjil-2023/assignments/tutorial/tutorial-8"}},m={},p=[{value:"Tujuan Pembelajaran",id:"tujuan-pembelajaran",level:2},{value:"Navigasi Halaman pada Flutter",id:"navigasi-halaman-pada-flutter",level:2},{value:"Input dan Form pada Flutter",id:"input-dan-form-pada-flutter",level:2},{value:"Tutorial: Menambahkan Drawer Menu dan Navigasi",id:"tutorial-menambahkan-drawer-menu-dan-navigasi",level:2},{value:"Tutorial: Membuat Halaman Baru",id:"tutorial-membuat-halaman-baru",level:2},{value:"Tutorial: Menambahkan Form dan Elemen Input",id:"tutorial-menambahkan-form-dan-elemen-input",level:2},{value:"Tutorial: Memunculkan Data",id:"tutorial-memunculkan-data",level:2},{value:"Akhir Kata",id:"akhir-kata",level:2},{value:"Referensi Tambahan",id:"referensi-tambahan",level:2},{value:"Kontributor",id:"kontributor",level:2}],u={toc:p};function d(a){let{components:e,...n}=a;return(0,i.kt)("wrapper",(0,t.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lab-7-flutter-navigation-input-dan-form"},"Lab 7: Flutter Navigation, Input, dan Form"),(0,i.kt)("p",null,"Pemrograman Berbasis Platform (CSGE602022) - diselenggarakan oleh Fakultas Ilmu Komputer, Universitas Indonesia, Semester Ganjil 2022/2023"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"tujuan-pembelajaran"},"Tujuan Pembelajaran"),(0,i.kt)("p",null,"Setelah menyelesaikan tutorial ini, mahasiswa diharapkan untuk:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Memahami elemen input dan form pada Flutter."),(0,i.kt)("li",{parentName:"ul"},"Memahami navigasi dan ",(0,i.kt)("em",{parentName:"li"},"routing")," dasar pada Flutter."),(0,i.kt)("li",{parentName:"ul"},"Memahami alur pembuatan form dan data pada Flutter.")),(0,i.kt)("h2",{id:"navigasi-halaman-pada-flutter"},"Navigasi Halaman pada Flutter"),(0,i.kt)("p",null,"Pada saat belajar pengembangan ",(0,i.kt)("em",{parentName:"p"},"web"),", kalian pasti sudah belajar bahwa dalam sebuah ",(0,i.kt)("em",{parentName:"p"},"website")," kita dapat berpindah-pindah halaman sesuai dengan ",(0,i.kt)("em",{parentName:"p"},"url")," yang diakses. Begitu juga pada sebuah aplikasi, kita dapat melakukan perpindahan dari satu halaman ke halaman lain. Bedanya, pada sebuah aplikasi, yang kita gunakan untuk berpindah bukanlah dengan mengakses ",(0,i.kt)("em",{parentName:"p"},"url"),"."),(0,i.kt)("p",null,"Flutter menyediakan sistem yang cukup lengkap untuk melakukan navigasi antar halaman. Salah satu cara yang dapat kita gunakan untuk berpindah-pindah halaman adalah dengan menggunakan ",(0,i.kt)("em",{parentName:"p"},"widget")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Navigator"),". ",(0,i.kt)("em",{parentName:"p"},"Widget")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Navigator")," menampilkan layar seakan sebagai sebuah tumpukan (",(0,i.kt)("em",{parentName:"p"},"stack"),"). Untuk menavigasi sebuah halaman baru, kita dapat mengakses ",(0,i.kt)("inlineCode",{parentName:"p"},"Navigator")," melalui ",(0,i.kt)("inlineCode",{parentName:"p"},"BuildContext")," dan memanggil fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"push()")," atau ",(0,i.kt)("inlineCode",{parentName:"p"},"pop()"),". Berikut contoh penggunaan ",(0,i.kt)("inlineCode",{parentName:"p"},"Navigator"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"...\nonPressed: () {\n    Navigator.of(context).push(\n        MaterialPageRoute(\n          builder: (context) => const MyNewScreen(myProp: prop),\n        ),\n    );\n},\nchild: Text(myProp.someValue),\n...\n")),(0,i.kt)("p",null,"Untuk mengetahui lebih dalam terkait ",(0,i.kt)("inlineCode",{parentName:"p"},"Navigator"),", dapat dibaca pada tautan berikut: ",(0,i.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/Navigator-class.html"},"https://api.flutter.dev/flutter/widgets/Navigator-class.html")),(0,i.kt)("h2",{id:"input-dan-form-pada-flutter"},"Input dan Form pada Flutter"),(0,i.kt)("p",null,"Sama halnya dengan sebuah ",(0,i.kt)("em",{parentName:"p"},"web"),", sebuah aplikasi juga dapat berinteraksi dengan pengguna melalui ",(0,i.kt)("em",{parentName:"p"},"input")," dan ",(0,i.kt)("em",{parentName:"p"},"form"),". Flutter memiliki ",(0,i.kt)("em",{parentName:"p"},"widget")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Form")," yang dapat kita manfaatkan untuk menjadi wadah bagi beberapa ",(0,i.kt)("em",{parentName:"p"},"input field widget")," yang kita buat. Sama hal nya dengan ",(0,i.kt)("em",{parentName:"p"},"input field")," pada ",(0,i.kt)("em",{parentName:"p"},"web"),", Flutter juga memiliki banyak tipe ",(0,i.kt)("em",{parentName:"p"},"input field"),", salah satunya ",(0,i.kt)("em",{parentName:"p"},"widget")," ",(0,i.kt)("inlineCode",{parentName:"p"},"TextField"),"."),(0,i.kt)("p",null,"Untuk mencoba-coba, jalankan perintah berikut:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"flutter create --sample=widgets.Form.1 formSample\n")),(0,i.kt)("p",null,"Untuk mengetahui lebih lanjut terkait ",(0,i.kt)("em",{parentName:"p"},"widget")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Form"),", dapat dibaca pada tautan berikut: ",(0,i.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/Form-class.html"},"https://api.flutter.dev/flutter/widgets/Form-class.html")),(0,i.kt)("h2",{id:"tutorial-menambahkan-drawer-menu-dan-navigasi"},"Tutorial: Menambahkan Drawer Menu dan Navigasi"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Buka proyek yang sebelumnya telah dibuat pada tutorial 6 dengan menggunakan IDE favoritmu.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Ubahlah kode pada ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/main.dart")," agar menjadi seperti berikut."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"class MyApp extends StatelessWidget {\n    const MyApp({super.key});\n\n    @override\n    Widget build(BuildContext context) {\n        return MaterialApp(\n        title: 'Flutter Demo',\n        theme: ThemeData(\n            primarySwatch: Colors.blue,\n        ),\n        home: const MyHomePage(),\n        );\n    }\n}\n\nclass MyHomePage extends StatefulWidget {\n    const MyHomePage({super.key});\n\n    final String title = 'Flutter Demo Home Page';\n\n    @override\n    State<MyHomePage> createState() => _MyHomePageState();\n}\n...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Tambahkan potongan kode berikut pada file ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/main.dart"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"  ...\n  appBar: AppBar(\n    title: Text(widget.title),\n  ),\n  // Menambahkan drawer menu\n  drawer: Drawer(\n      child: Column(\n        children: [\n          // Menambahkan clickable menu\n          ListTile(\n            title: const Text('Counter'),\n            onTap: () {\n              // Route menu ke halaman utama\n              Navigator.pushReplacement(\n                context,\n                MaterialPageRoute(builder: (context) => const MyHomePage()),\n              );\n            },\n          ),\n          ListTile(\n            title: const Text('Form'),\n            onTap: () {\n              // Route menu ke halaman form\n              Navigator.pushReplacement(\n                context,\n                MaterialPageRoute(builder: (context) => const MyFormPage()),\n              );\n            },\n          ),\n        ],\n      ),\n    ),\n  body: Center(\n  ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Jangan jalankan aplikasi terlebih dahulu, karena akan muncul ",(0,i.kt)("em",{parentName:"p"},"error")," akibat tidak ditemukannya halaman ",(0,i.kt)("inlineCode",{parentName:"p"},"MyFormPage"),". Lakukan tutorial di bawah terlebih dahulu untuk membuat halaman tersebut."))),(0,i.kt)("h2",{id:"tutorial-membuat-halaman-baru"},"Tutorial: Membuat Halaman Baru"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Buatlah file baru pada folder ",(0,i.kt)("inlineCode",{parentName:"p"},"lib")," dengan nama ",(0,i.kt)("inlineCode",{parentName:"p"},"form.dart"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Tambahkan ",(0,i.kt)("em",{parentName:"p"},"boilerplate")," berikut ke dalam file tersebut."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"class MyFormPage extends StatefulWidget {\n    const MyFormPage({super.key});\n\n    @override\n    State<MyFormPage> createState() => _MyFormPageState();\n}\n\nclass _MyFormPageState extends State<MyFormPage> {\n    @override\n    Widget build(BuildContext context) {\n        return Scaffold(\n            appBar: AppBar(\n                title: Text('Form'),\n            ),\n            body: Center(\n                child: Column(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    children: <Widget>[\n                        Text('Hello World!'),\n                    ],\n                ),\n            ),\n        );\n    }\n}\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Tambahkan ulang kode drawer yang sebelumnya ditambahkan pada halaman utama ke dalam halaman yang baru saja kamu buat.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Cek apakah setiap widget antar file telah diimpor. Jika belum, impor file ke dalam file lainnya. Berikut adalah contohnya."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"/lib/main.dart")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter_app/form.dart';\nimport 'package:flutter/material.dart';\n...\n")),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"/lib/form.dart")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:flutter_app/main.dart';\nimport 'package:flutter/material.dart';\n...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Coba jalankan aplikasi untuk melihat perubahan yang baru saja kamu buat. Seharusnya terdapat drawer atau ",(0,i.kt)("em",{parentName:"p"},"hamburger menu")," pada pojok kiri atas dan halaman form berisi teks \u201cHello World!\u201d."))),(0,i.kt)("h2",{id:"tutorial-menambahkan-form-dan-elemen-input"},"Tutorial: Menambahkan Form dan Elemen Input"),(0,i.kt)("p",null,"Kita akan mencoba untuk menambahkan lima tipe input form yang ada di Flutter, yaitu ",(0,i.kt)("inlineCode",{parentName:"p"},"TextFormField"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"CheckboxListTile"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"SwitchListTile"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"DropdownButton"),", dan ",(0,i.kt)("inlineCode",{parentName:"p"},"Slider"),"."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Ubah widget Center menjadi Form."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"  ...\n  body: Form(),\n  ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Tambahkan ",(0,i.kt)("em",{parentName:"p"},"form key")," sebagai ",(0,i.kt)("em",{parentName:"p"},"handle")," dari ",(0,i.kt)("em",{parentName:"p"},"form state"),", validasi form, and penyimpanan form."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"...\nclass _MyFormPageState extends State<MyFormPage> {\nfinal _formKey = GlobalKey<FormState>();\n\n@override\n...\n    body: Form(\n        key: _formKey,\n    ),\n    ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Buatlah widget SingleChildScrollView sebagai ",(0,i.kt)("em",{parentName:"p"},"child")," dari widget Form."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"  ...\n  body: Form(\n    key: _formKey,\n    child: SingleChildScrollView(),\n  ),\n  ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Buatlah widget Container sebagai ",(0,i.kt)("em",{parentName:"p"},"child")," dari widget SingleChildScrollView."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"    ...\n    child: SingleChildScrollView(\n      child: Container(),\n    ),\n    ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Tambahkan ",(0,i.kt)("em",{parentName:"p"},"padding")," pada widget Container agar tampilan rapi. Sebagai contoh, kita akan memakai ",(0,i.kt)("em",{parentName:"p"},"padding")," sebesar 20 ",(0,i.kt)("em",{parentName:"p"},"pixels"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"      ...\n      child: Container(\n        padding: const EdgeInsets.all(20.0),\n      ),\n      ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Buatlah widget ",(0,i.kt)("em",{parentName:"p"},"Column")," sebagai ",(0,i.kt)("em",{parentName:"p"},"child")," dari widget Container."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"      ...\n      child: Container(\n        padding: const EdgeInsets.all(20.0),\n        child: Column(),\n      ),\n      ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Buatlah widget TextFormField yang dibungkus oleh Padding sebagai salah satu ",(0,i.kt)("em",{parentName:"p"},"children")," dari widget Column. Selain itu, tambahkan variabel baru sebagai ",(0,i.kt)("em",{parentName:"p"},"placeholder")," dari ",(0,i.kt)("em",{parentName:"p"},"value")," yang diketik pada TextFormField nantinya. Buatlah TextFormField sebagai penampung variabel nama lengkap. Berikut adalah contohnya."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},'...\nclass _MyFormPageState extends State<MyFormPage> {\nfinal _formKey = GlobalKey<FormState>();\nString _namaLengkap = "";\n\n@override\n...\n            child: Column(\n            children: [\n                Padding(\n                    // Menggunakan padding sebesar 8 pixels\n                    padding: const EdgeInsets.all(8.0),\n                    child: TextFormField(\n                        decoration: InputDecoration(\n                            hintText: "Contoh: Pak Dengklek",\n                            labelText: "Nama Lengkap",\n                            // Menambahkan icon agar lebih intuitif\n                            icon: const Icon(Icons.people),\n                            // Menambahkan circular border agar lebih rapi\n                            border: OutlineInputBorder(\n                                borderRadius: BorderRadius.circular(5.0),\n                            ),\n                        ),\n                        // Menambahkan behavior saat nama diketik \n                        onChanged: (String? value) {\n                            setState(() {\n                                _namaLengkap = value!;\n                            });\n                        },\n                        // Menambahkan behavior saat data disimpan\n                        onSaved: (String? value) {\n                            setState(() {\n                                _namaLengkap = value!;\n                            });\n                        },\n                        // Validator sebagai validasi form\n                        validator: (String? value) {\n                            if (value == null || value.isEmpty) {\n                                return \'Nama lengkap tidak boleh kosong!\';\n                            }\n                            return null;\n                        },\n                    ),\n                ),\n            ],\n            ...\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Buatlah beberapa widget CheckboxListTile sebagai ",(0,i.kt)("em",{parentName:"p"},"children")," dari widget Column. Selain itu, tambahkan beberapa variabel baru sebagai ",(0,i.kt)("em",{parentName:"p"},"placeholder")," dari ",(0,i.kt)("em",{parentName:"p"},"value")," setiap CheckboxListTile nantinya. CheckboxListTile akan menjadi penampung pilihan jenjang Sarjana, Diploma, Magister, atau Doktor. Berikut adalah contohnya."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"...\nbool jenjangSarjana = false;\nbool jenjangDiploma = false;\nbool jenjangMagister = false;\nbool jenjangDoktor = false;\n\n@override\n...\n            Container(\n            margin: const EdgeInsets.all(8),\n            decoration: BoxDecoration(\n                border: Border.all(color: Colors.grey),\n                borderRadius: BorderRadius.circular(5),\n            ),\n            child: Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                const ListTile(\n                    leading:  Icon(Icons.school),\n                    title: Text(\"Jenjang\"),\n                ),\n                CheckboxListTile(\n                    title: const Text('Sarjana'),\n                    value: jenjangSarjana,\n                    onChanged: (bool? value) {\n                    setState(() {\n                        jenjangSarjana = value!;\n                        if (value){\n                            jenjangMagister = jenjangDiploma = jenjangDoktor = false;\n                        }\n                    });\n                    },\n                ),\n                CheckboxListTile(\n                    title: const Text('Diploma'),\n                    value: jenjangDiploma,\n                    onChanged: (bool? value) {\n                    setState(() {\n                        jenjangDiploma = value!;\n                        if (value){\n                            jenjangMagister = jenjangSarjana = jenjangDoktor = false;\n                        }\n                    });\n                    },\n                ),\n                CheckboxListTile(\n                    title: const Text('Magister'),\n                    value: jenjangMagister,\n                    onChanged: (bool? value) {\n                    setState(() {\n                        jenjangMagister = value!;\n                        if (value){\n                            jenjangDiploma = jenjangSarjana = jenjangDoktor = false;\n                        }\n                    });\n                    },\n                ),\n                CheckboxListTile(\n                    title: const Text('Doktor'),\n                    value: jenjangDoktor,\n                    onChanged: (bool? value) {\n                    setState(() {\n                        jenjangDoktor = value!;\n                        if (value){\n                            jenjangMagister = jenjangSarjana = jenjangDiploma = false;\n                        }\n                    });\n                    },\n                ),\n            ],\n            ),\n        ),\n        ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Buatlah widget Slider sebagai salah satu ",(0,i.kt)("em",{parentName:"p"},"children")," dari widget Column. Selain itu, tambahkan variabel baru sebagai ",(0,i.kt)("em",{parentName:"p"},"placeholder")," dari ",(0,i.kt)("em",{parentName:"p"},"value")," Slider nantinya. Slider akan menjadi penampung pilihan umur. Berikut adalah contohnya."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"...\ndouble umur = 0;\n\n@override\n...\n            ListTile(\n            leading: const Icon(Icons.co_present),\n            title: Row(\n                children: [\n                Text('Umur: ${umur.round()}'),\n                ],\n            ),\n            subtitle: Slider(\n                value: umur,\n                max: 100,\n                divisions: 100,\n                label: umur.round().toString(),\n                onChanged: (double value) {\n                setState(() {\n                    umur = value;\n                });\n                },\n            ),\n            ),\n            ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Buatlah widget DropdownButton sebagai salah satu ",(0,i.kt)("em",{parentName:"p"},"children")," dari widget Column. Tambahkan variabel baru sebagai ",(0,i.kt)("em",{parentName:"p"},"placeholder")," dari ",(0,i.kt)("em",{parentName:"p"},"value")," Slider nantinya. Selain itu, tambahkan pula List of String yang menampung opsi yang akan ditampilkan pada dropdown. Slider akan menjadi penampung pilihan kelas PBP. Berikut adalah contohnya."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"...\nString kelasPBP = 'A';\nList<String> listKelasPBP = ['A', 'B', 'C', 'D', 'E', 'F', 'KI'];\n\n@override\n...\n            ListTile(\n            leading: const Icon(Icons.class_),\n            title: const Text(\n                'Kelas PBP',\n            ),\n            trailing: DropdownButton(\n                value: kelasPBP,\n                icon: const Icon(Icons.keyboard_arrow_down),\n                items: listKelasPBP.map((String items) {\n                return DropdownMenuItem(\n                    value: items,\n                    child: Text(items),\n                );\n                }).toList(),\n                onChanged: (String? newValue) {\n                setState(() {\n                    kelasPBP = newValue!;\n                });\n                },\n            ),\n            ),\n            ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Buatlah widget SwitchListTile yang dibungkus oleh Padding sebagai salah satu ",(0,i.kt)("em",{parentName:"p"},"children")," dari widget Column. Selain itu, tambahkan variabel baru sebagai ",(0,i.kt)("em",{parentName:"p"},"placeholder")," dari ",(0,i.kt)("em",{parentName:"p"},"value")," dari SwitchListTile nantinya. Buatlah SwitchListTile sebagai penampung variabel status apakah sedang pada ",(0,i.kt)("inlineCode",{parentName:"p"},"Practice Mode")," atau tidak. Berikut adalah contohnya."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"...\nbool _nilaiSwitch = false;\n\n@override\n...\n                SwitchListTile(\n                title: const Text('Practice Mode'),\n                value: _nilaiSwitch,\n                onChanged: (bool value) {\n                    setState(() {\n                    _nilaiSwitch = value;\n                    });\n                },\n                secondary: const Icon(Icons.run_circle_outlined),\n                ),\n                ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Buatlah tombol yang akan menyimpan data yang ada di setiap elemen input. Kali ini kita tidak akan menyimpan data ke dalam ",(0,i.kt)("em",{parentName:"p"},"database"),", namun kita akan memunculkannya pada popup yang akan muncul setelah tombol ditekan."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},'            ...\n            TextButton(\n              child: const Text(\n                "Simpan",\n                style: TextStyle(color: Colors.white),\n              ),\n              style: ButtonStyle(\n                backgroundColor: MaterialStateProperty.all(Colors.blue),\n              ),\n              onPressed: () {\n                if (_formKey.currentState!.validate()) {}\n              },\n            ),\n            ...\n')))),(0,i.kt)("p",null,"Setelah semua input dan logika form dibuat, maka kita akan membuat popup yang akan memunculkan data yang ada pada input form saat tombol ",(0,i.kt)("inlineCode",{parentName:"p"},"Simpan")," ditekan."),(0,i.kt)("h2",{id:"tutorial-memunculkan-data"},"Tutorial: Memunculkan Data"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Tambahkan fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"showDialog()")," pada bagian ",(0,i.kt)("inlineCode",{parentName:"p"},"onPressed()")," dan munculkan widget Dialog pada fungsi tersebut. Berikut adalah contoh potongan kodenya."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"          ...\n          onPressed: () {\n            if (_formKey.currentState!.validate()) {\n              showDialog(\n                context: context,\n                builder: (context) {\n                  return Dialog(\n                    shape: RoundedRectangleBorder(\n                      borderRadius: BorderRadius.circular(10),\n                    ),\n                    elevation: 15,\n                    child: Container(\n                      child: ListView(\n                        padding: const EdgeInsets.only(top: 20, bottom: 20),\n                        shrinkWrap: true,\n                        children: <Widget>[\n                          Center(child: const Text('Informasi Data')),\n                          SizedBox(height: 20),\n                          // TODO: Munculkan informasi yang didapat dari form\n                          TextButton(\n                            onPressed: () {\n                              Navigator.pop(context);\n                            },\n                            child: Text('Kembali'),\n                          ), \n                        ],\n                      ),\n                    ),\n                  );\n                },\n              );\n            }\n          },\n          ...\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Tambahkan informasi yang didapat dari form. Kamu dapat menggunakan widget ",(0,i.kt)("inlineCode",{parentName:"p"},"Text")," dan melakukan ",(0,i.kt)("em",{parentName:"p"},"string concatenation")," agar keterangan data dan isi data dapat disajikan dalam satu widget. Contohnya adalah ",(0,i.kt)("inlineCode",{parentName:"p"},"Text('Judul: ' + _namaLengkap)"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Coba jalankan program kamu, gunakan form yang telah dibuat, dan lihat hasilnya."))),(0,i.kt)("h2",{id:"akhir-kata"},"Akhir Kata"),(0,i.kt)("p",null,"Selamat, kamu telah mempelajari navigasi dasar dan pembuatan form dasar pada Flutter!"),(0,i.kt)("p",null,"Setelah kamu menyelesaikan seluruh tutorial di atas, kamu dapat mencoba widget input lainnya yang ada di Flutter. Kamu juga dapat mencoba untuk membuat halaman baru dengan opsi navigasi yang berbeda, seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"Navigator.push()")," dan ",(0,i.kt)("inlineCode",{parentName:"p"},"Navigator.pop()"),"."),(0,i.kt)("p",null,"Jika kamu ingin mencoba tantangan, maka cobalah untuk menerapkan hal berikut pada tutorial ini."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Modifikasi navigasi pada Drawer agar melakukan ",(0,i.kt)("inlineCode",{parentName:"li"},"Navigator.pop()")," apabila halaman yang ingin dibuka adalah halaman yang sedang dibuka, alih-alih mengunakan ",(0,i.kt)("inlineCode",{parentName:"li"},"Navigator.pushReplacement()")," untuk semua navigasi."),(0,i.kt)("li",{parentName:"ul"},"Kustomisasi widget-widget yang telah kamu buat sebelumnya (",(0,i.kt)("em",{parentName:"li"},"styling"),"), seperti warna, ikon, dll.")),(0,i.kt)("h2",{id:"referensi-tambahan"},"Referensi Tambahan"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.flutter.dev/cookbook/forms/validation"},"Build a form with validation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.flutter.dev/development/ui/widgets/input"},"Input widgets")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.flutter.dev/development/ui/navigation"},"Navigation and routing"))),(0,i.kt)("h2",{id:"kontributor"},"Kontributor"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Muhammad Athallah"),(0,i.kt)("li",{parentName:"ul"},"Brandon Ivander"),(0,i.kt)("li",{parentName:"ul"},"Sabyna Maharani"),(0,i.kt)("li",{parentName:"ul"},"Muhammad Azis Husein")))}d.isMDXComponent=!0}}]);