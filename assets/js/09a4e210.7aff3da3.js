"use strict";(self.webpackChunk_pbp_fasilkom_ui_ganjil_2023=self.webpackChunk_pbp_fasilkom_ui_ganjil_2023||[]).push([[7084],{3905:(a,e,t)=>{t.d(e,{Zo:()=>d,kt:()=>u});var n=t(7294);function r(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function i(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function l(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function o(a,e){if(null==a)return{};var t,n,r=function(a,e){if(null==a)return{};var t,n,r={},i=Object.keys(a);for(n=0;n<i.length;n++)t=i[n],e.indexOf(t)>=0||(r[t]=a[t]);return r}(a,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(a);for(n=0;n<i.length;n++)t=i[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(r[t]=a[t])}return r}var p=n.createContext({}),m=function(a){var e=n.useContext(p),t=e;return a&&(t="function"==typeof a?a(e):l(l({},e),a)),t},d=function(a){var e=m(a.components);return n.createElement(p.Provider,{value:e},a.children)},k={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(a,e){var t=a.components,r=a.mdxType,i=a.originalType,p=a.parentName,d=o(a,["components","mdxType","originalType","parentName"]),s=m(t),u=r,c=s["".concat(p,".").concat(u)]||s[u]||k[u]||i;return t?n.createElement(c,l(l({ref:e},d),{},{components:t})):n.createElement(c,l({ref:e},d))}));function u(a,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof a||r){var i=t.length,l=new Array(i);l[0]=s;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=a,o.mdxType="string"==typeof a?a:r,l[1]=o;for(var m=2;m<i;m++)l[m]=t[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}s.displayName="MDXCreateElement"},6405:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var n=t(7462),r=(t(7294),t(3905));const i={sidebar_label:"Lab 8"},l="Tutorial 8: Flutter Model dan Komunikasi dengan Web Service",o={unversionedId:"tutorial/tutorial-8",id:"tutorial/tutorial-8",title:"Tutorial 8: Flutter Model dan Komunikasi dengan Web Service",description:"Pemrograman Berbasis Platform (CSGE602022) - diselenggarakan oleh Fakultas Ilmu Komputer, Universitas Indonesia, Semester Ganjil 2022/2023",source:"@site/assignments/tutorial/tutorial-8.md",sourceDirName:"tutorial",slug:"/tutorial/tutorial-8",permalink:"/ganjil-2023/assignments/tutorial/tutorial-8",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Lab 8"},sidebar:"tutorialSidebar",previous:{title:"Lab 7",permalink:"/ganjil-2023/assignments/tutorial/tutorial-7"},next:{title:"Lab 9",permalink:"/ganjil-2023/assignments/tutorial/tutorial-9"}},p={},m=[{value:"Tujuan Pembelajaran",id:"tujuan-pembelajaran",level:2},{value:"Model pada Flutter",id:"model-pada-flutter",level:2},{value:"Fetch Data dari Web Service pada Flutter",id:"fetch-data-dari-web-service-pada-flutter",level:2},{value:"Tutorial: Refactor File",id:"tutorial-refactor-file",level:2},{value:"Tutorial: Membuat Model Kustom",id:"tutorial-membuat-model-kustom",level:2},{value:"Tutorial: Menambahkan Dependensi HTTP",id:"tutorial-menambahkan-dependensi-http",level:2},{value:"Tutorial: Mengambil dan Mengolah Data dari Web Service",id:"tutorial-mengambil-dan-mengolah-data-dari-web-service",level:2},{value:"Tutorial: Menampilkan Data dari Web Service",id:"tutorial-menampilkan-data-dari-web-service",level:2},{value:"Akhir Kata",id:"akhir-kata",level:2},{value:"Referensi Tambahan",id:"referensi-tambahan",level:2},{value:"Kontributor",id:"kontributor",level:2}],d={toc:m};function k(a){let{components:e,...t}=a;return(0,r.kt)("wrapper",(0,n.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tutorial-8-flutter-model-dan-komunikasi-dengan-web-service"},"Tutorial 8: Flutter Model dan Komunikasi dengan Web Service"),(0,r.kt)("p",null,"Pemrograman Berbasis Platform (CSGE602022) - diselenggarakan oleh Fakultas Ilmu Komputer, Universitas Indonesia, Semester Ganjil 2022/2023"),(0,r.kt)("h2",{id:"tujuan-pembelajaran"},"Tujuan Pembelajaran"),(0,r.kt)("p",null,"Setelah menyelesaikan tutorial ini, mahasiswa diharapkan untuk:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Memahami struktur dan pembuatan model pada Flutter."),(0,r.kt)("li",{parentName:"ul"},"Memahami cara mengambil, mengolah, dan menampilkan data dari ",(0,r.kt)("em",{parentName:"li"},"web service"),".")),(0,r.kt)("h2",{id:"model-pada-flutter"},"Model pada Flutter"),(0,r.kt)("p",null,"Pada tutorial kali ini, kita akan membuat sebuah pemanggilan ",(0,r.kt)("em",{parentName:"p"},"web service")," hingga menampilkannya ke halaman Flutter yang kita buat. Akan tetapi sebelum melakukan pemanggilan ",(0,r.kt)("em",{parentName:"p"},"web service"),", kita perlu mendefinisikan model yang kita gunakan ketika melakukan pemanggilan ",(0,r.kt)("em",{parentName:"p"},"web service"),". Model pada Flutter menggunakan prinsip ",(0,r.kt)("em",{parentName:"p"},"class")," seperti layaknya yang sudah dipelajari pada DDP2 bagian OOP."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Kode di bawah ini adalah contoh, tidak wajib diikuti, tetapi sangat disarankan dibaca karena konsepnya akan digunakan pada bagian-bagian selanjutnya.\n")),(0,r.kt)("p",null,"Berikut merupakan contoh ",(0,r.kt)("em",{parentName:"p"},"class")," pada Flutter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"class Mobil {\n    Mobil({\n        this.id,\n        this.brand,\n        this.model\n        this.color\n    });\n\n    int id;\n    String brand;\n    String model;\n    String color;\n}\n")),(0,r.kt)("p",null,"Catatan: Jika kamu mengalami error saat membuat class, tambahkan keyword required pada setiap parameter class pada bagian constructor."),(0,r.kt)("p",null,"Sampai saat ini, kita telah berhasil membuat ",(0,r.kt)("em",{parentName:"p"},"class"),". Selanjutnya, kita akan menambahkan beberapa kode sehingga terbentuk sebuah model ",(0,r.kt)("inlineCode",{parentName:"p"},"Mobil"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"Mobil")," ini merupakan suatu model yang merepresentasikan response dari pemanggilan ",(0,r.kt)("em",{parentName:"p"},"web service"),"."),(0,r.kt)("p",null,"Tambahkan import dart convert pada bagian paling atas file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"import 'dart:convert';\n...\n")),(0,r.kt)("p",null,"Pada ",(0,r.kt)("em",{parentName:"p"},"class")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Mobil"),", tambahkan kode berikut."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},'factory Mobil.fromJson(Map<String, dynamic> json) => Mobil(\n    id: json["id"],\n    brand: json["brand"],\n    model: json["model"],\n    color: json["color"],\n);\n\nMap<String, dynamic> toJson() => {\n    "id": id,\n    "brand": brand,\n    "model": model,\n    "color": color,\n};\n')),(0,r.kt)("p",null,"Tambahkan kode berikut di luar ",(0,r.kt)("em",{parentName:"p"},"class")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Mobil"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"Mobil mobilFromJson(String str) => Mobil.fromJson(json.decode(str));\nString mobilToJson(Mobil data) => json.encode(data.toJson());\n")),(0,r.kt)("p",null,"Sehingga kode akhirnya akan seperti berikut untuk menampilkan satu objek ",(0,r.kt)("inlineCode",{parentName:"p"},"Mobil")," dari ",(0,r.kt)("em",{parentName:"p"},"web service"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},'import \'dart:convert\';\n\nMobil mobilFromJson(String str) => Mobil.fromJson(json.decode(str));\nString mobilToJson(Mobil data) => json.encode(data.toJson());\n\nclass Mobil {\n    Mobil({\n        this.id,\n        this.brand,\n        this.model,\n        this.color,\n    });\n\n    int id;\n    String brand;\n    String model;\n    String color;\n\n    factory Mobil.fromJson(Map<String, dynamic> json) => Mobil(\n         id: json["id"],\n         brand: json["brand"],\n         model: json["model"],\n         color: json["color"],\n    );\n\n    Map<String, dynamic> toJson() => {\n          "id": id,\n          "brand": brand,\n          "model": model,\n          "color": color,\n    };\n}\n')),(0,r.kt)("p",null,"Penjelasan kode di atas adalah sebagai berikut."),(0,r.kt)("p",null,"Terdapat beberapa kode-kode tambahan seperti ",(0,r.kt)("em",{parentName:"p"},"method")," ",(0,r.kt)("inlineCode",{parentName:"p"},"toJson")," dan ",(0,r.kt)("inlineCode",{parentName:"p"},"fromJson")," di dalam ",(0,r.kt)("em",{parentName:"p"},"class")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Mobil"),". Hal tersebut disebabkan ketika kita me-",(0,r.kt)("em",{parentName:"p"},"request")," suatu ",(0,r.kt)("em",{parentName:"p"},"web service")," dengan ",(0,r.kt)("em",{parentName:"p"},"method")," ",(0,r.kt)("strong",{parentName:"p"},"GET"),", umumnya kita mendapatkan hasil pemanggilan berupa JSON. Oleh karena itu, kita perlu melakukan konversi data dengan ",(0,r.kt)("em",{parentName:"p"},"method")," ",(0,r.kt)("inlineCode",{parentName:"p"},"fromJson")," agar Flutter mengenali JSON tersebut sebagai objek ",(0,r.kt)("em",{parentName:"p"},"class")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Mobil"),". Selain itu, terdapat juga ",(0,r.kt)("em",{parentName:"p"},"method")," ",(0,r.kt)("inlineCode",{parentName:"p"},"toJson")," yang akan digunakan ketika kita melakukan pengiriman data ke ",(0,r.kt)("em",{parentName:"p"},"web service")," (seperti ",(0,r.kt)("strong",{parentName:"p"},"POST")," atau ",(0,r.kt)("strong",{parentName:"p"},"PUT"),")."),(0,r.kt)("p",null,"Berikut adalah contoh respons dari ",(0,r.kt)("em",{parentName:"p"},"web service")," dengan ",(0,r.kt)("em",{parentName:"p"},"method")," ",(0,r.kt)("strong",{parentName:"p"},"GET")," yang dapat dikonversi ke ",(0,r.kt)("em",{parentName:"p"},"class")," model ",(0,r.kt)("strong",{parentName:"p"},"Mobil")," tersebut."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "id": 1,\n   "brand": "Honda",\n   "model": "Civic",\n   "color": "Yellow"\n}\n')),(0,r.kt)("p",null,"Lalu, bagaimana jika respons dari ",(0,r.kt)("em",{parentName:"p"},"web service")," berupa kumpulan objek JSON? Sebenarnya sama saja dengan kode di atas, hanya saja terdapat pengubahan pada ",(0,r.kt)("em",{parentName:"p"},"method")," ",(0,r.kt)("inlineCode",{parentName:"p"},"mobilFromJson")," dan ",(0,r.kt)("inlineCode",{parentName:"p"},"mobilToJson"),"."),(0,r.kt)("p",null,"Kodenya adalah sebagai berikut."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"List<Mobil> mobilFromJson(String str) => List<Mobil>.from(json.decode(str).map((mobil) => Mobil.fromJson(mobil)));\n\nString mobilToJson(List<Mobil> data) => json.encode(List<dynamic>.from(data.map((mobil) => mobil.toJson())));\n")),(0,r.kt)("p",null,"Berikut adalah contoh respons dari ",(0,r.kt)("em",{parentName:"p"},"web service")," dengan ",(0,r.kt)("em",{parentName:"p"},"method")," ",(0,r.kt)("strong",{parentName:"p"},"GET")," yang dapat dikonversi ke model ",(0,r.kt)("inlineCode",{parentName:"p"},"Mobil")," tersebut."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": 1,\n    "brand": "Honda",\n    "model": "Civic",\n    "color": "Yellow"\n  },\n  {\n    "id": 2,\n    "brand": "Toyota",\n    "model": "Supra",\n    "color": "Red"\n  }\n]\n')),(0,r.kt)("h2",{id:"fetch-data-dari-web-service-pada-flutter"},"Fetch Data dari Web Service pada Flutter"),(0,r.kt)("p",null,"Sebagai seorang ",(0,r.kt)("em",{parentName:"p"},"developer"),", tentunya kita membutuhkan data untuk ditampilkan ke ",(0,r.kt)("em",{parentName:"p"},"client"),". Hal ini mengharuskan kalian untuk mengetahui bagaimana cara untuk melakukan ",(0,r.kt)("em",{parentName:"p"},"fetching data")," dari ",(0,r.kt)("em",{parentName:"p"},"web service")," kemudian menampilkannya ke aplikasi yang telah kita buat sebelumnya."),(0,r.kt)("p",null,"Secara umum terdapat beberapa langkah ketika ingin menampilkan data dari ",(0,r.kt)("em",{parentName:"p"},"web service")," lain ke aplikasi Flutter, yaitu:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Menambahkan ",(0,r.kt)("em",{parentName:"p"},"dependency")," ",(0,r.kt)("inlineCode",{parentName:"p"},"http")," ke proyek, ",(0,r.kt)("em",{parentName:"p"},"dependency")," ini digunakan untuk bertukar data melalui ",(0,r.kt)("em",{parentName:"p"},"HTTP request"),", seperti ",(0,r.kt)("strong",{parentName:"p"},"GET"),", ",(0,r.kt)("strong",{parentName:"p"},"POST"),", ",(0,r.kt)("strong",{parentName:"p"},"PUT"),", dan lain-lain.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Membuat model sesuai dengan respons dari data yang berasal dari ",(0,r.kt)("em",{parentName:"p"},"web service")," tersebut.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Membuat ",(0,r.kt)("em",{parentName:"p"},"http request")," ke ",(0,r.kt)("em",{parentName:"p"},"web service")," menggunakan ",(0,r.kt)("em",{parentName:"p"},"dependency")," ",(0,r.kt)("inlineCode",{parentName:"p"},"http"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Mengkonversikan objek yang didapatkan dari ",(0,r.kt)("em",{parentName:"p"},"web service")," ke model yang telah kita buat di langkah kedua.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Menampilkan data yang telah dikonversi ke aplikasi dengan ",(0,r.kt)("inlineCode",{parentName:"p"},"FutureBuilder"),"."))),(0,r.kt)("p",null,"Selengkapnya dapat dibaca pada tautan berikut: ",(0,r.kt)("a",{parentName:"p",href:"https://docs.flutter.dev/cookbook/networking/fetch-data#5-display-the-data"},"https://docs.flutter.dev/cookbook/networking/fetch-data#5-display-the-data")),(0,r.kt)("h2",{id:"tutorial-refactor-file"},"Tutorial: Refactor File"),(0,r.kt)("p",null,"Refaktorisasi kode (",(0,r.kt)("em",{parentName:"p"},"refactor code"),") adalah proses restrukturisasi kode program yang ada tanpa mengubah ",(0,r.kt)("em",{parentName:"p"},"behavior")," program. Proses ini dilakukan untuk meningkatkan keterbacaan, mengurangi kompleksitas kode, dan memudahkan proses ",(0,r.kt)("em",{parentName:"p"},"maintenance")," ke depannya."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Buka proyek yang sebelumnya telah dibuat pada tutorial sebelumnya dengan menggunakan IDE favoritmu.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Di dalam folder ",(0,r.kt)("inlineCode",{parentName:"p"},"lib"),", buatlah dua folder baru dengan nama ",(0,r.kt)("inlineCode",{parentName:"p"},"model")," dan ",(0,r.kt)("inlineCode",{parentName:"p"},"page"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Pindahkan file selain ",(0,r.kt)("inlineCode",{parentName:"p"},"main.dart")," ke dalam ke folder ",(0,r.kt)("inlineCode",{parentName:"p"},"page"),"."))),(0,r.kt)("h2",{id:"tutorial-membuat-model-kustom"},"Tutorial: Membuat Model Kustom"),(0,r.kt)("p",null,"Dalam membuat model yang menyesuaikan dengan data JSON, kita dapat memanfaatkan website ",(0,r.kt)("a",{parentName:"p",href:"https://app.quicktype.io/"},"Quicktype")," dengan tahapan sebagai berikut."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Buka situs web ",(0,r.kt)("a",{parentName:"p",href:"https://jsonplaceholder.typicode.com/todos?_start=0&_limit=10"},"https://jsonplaceholder.typicode.com/todos?_start=0&_limit=10")," untuk mendapatkan data JSON.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Salinlah data JSON pada situs web sebelumnya, kemudian buka situs web ",(0,r.kt)("a",{parentName:"p",href:"https://app.quicktype.io/"},"Quicktype"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Pada situs web Quicktype, ubahlah ",(0,r.kt)("em",{parentName:"p"},"setup name")," menjadi ",(0,r.kt)("inlineCode",{parentName:"p"},"ToDo"),", ",(0,r.kt)("em",{parentName:"p"},"source type")," menjadi ",(0,r.kt)("inlineCode",{parentName:"p"},"JSON"),", dan ",(0,r.kt)("em",{parentName:"p"},"language")," menjadi Dart.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Tempel data JSON yang telah disalin sebelumnya ke dalam ",(0,r.kt)("em",{parentName:"p"},"textbox")," yang tersedia pada Quicktype."),(0,r.kt)("p",{parentName:"li"},"Berikut adalah contoh hasilnya."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://i.ibb.co/B6Vjj44/quicktype-example.png",alt:"Quicktype Example"}))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Klik pilihan ",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Code")," pada Quicktype."))),(0,r.kt)("p",null,"Setelah mendapatkan kode model melalui Quicktype, buka kembali proyek Flutter dan lakukan langkah-langkah berikut."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Buatlah file baru pada folder ",(0,r.kt)("inlineCode",{parentName:"p"},"lib/model")," dengan nama ",(0,r.kt)("inlineCode",{parentName:"p"},"to_do.dart"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Tempel kode yang telah disalin sebelumnya ke file ",(0,r.kt)("inlineCode",{parentName:"p"},"to_do.dart"),"."))),(0,r.kt)("p",null,"Catatan: Jika kamu mengalami error saat membuat model, tambahkan keyword required pada setiap parameter model pada bagian constructor."),(0,r.kt)("h2",{id:"tutorial-menambahkan-dependensi-http"},"Tutorial: Menambahkan Dependensi HTTP"),(0,r.kt)("p",null,"Untuk melakukan perintah ",(0,r.kt)("em",{parentName:"p"},"HTTP request"),", kita membutuhkan ",(0,r.kt)("em",{parentName:"p"},"package")," tambahan yakni ",(0,r.kt)("em",{parentName:"p"},"package")," ",(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/http"},"http"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Lakukan ",(0,r.kt)("inlineCode",{parentName:"p"},"flutter pub add http")," pada terminal proyek Flutter untuk menambahkan ",(0,r.kt)("em",{parentName:"p"},"package")," ",(0,r.kt)("inlineCode",{parentName:"p"},"http"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Pada file ",(0,r.kt)("inlineCode",{parentName:"p"},"android/app/src/main/AndroidManifest.xml"),", tambahkan kode berikut untuk memperbolehkan akses Internet pada aplikasi Flutter yang sedang dibuat."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'...\n    <application>\n    ...\n    </application>\n    \x3c!-- Required to fetch data from the Internet. --\x3e\n    <uses-permission android:name="android.permission.INTERNET" />\n...\n')))),(0,r.kt)("h2",{id:"tutorial-mengambil-dan-mengolah-data-dari-web-service"},"Tutorial: Mengambil dan Mengolah Data dari Web Service"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Buatlah file baru pada folder ",(0,r.kt)("inlineCode",{parentName:"p"},"lib/page")," dengan nama ",(0,r.kt)("inlineCode",{parentName:"p"},"to_do_page.dart"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Pada file ",(0,r.kt)("inlineCode",{parentName:"p"},"to_do_page.dart"),", tambahkan impor yang dibutuhkan. Ubahlah <APP_NAME> sesuai dengan nama proyek Flutter yang kalian buat."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:http/http.dart' as http;\nimport 'dart:convert';\nimport 'package:<APP_NAME>/model/to_do.dart';\n...\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Buatlah ",(0,r.kt)("em",{parentName:"p"},"stateful widget")," dengan nama class ",(0,r.kt)("inlineCode",{parentName:"p"},"ToDoPage"),". Contoh struktur stateful widget dapat dilihat pada tautan ",(0,r.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/StatefulWidget-class.html"},"berikut"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Lakukan pengambilan data dari URL ",(0,r.kt)("a",{parentName:"p",href:"https://jsonplaceholder.typicode.com/todos?_start=0&_limit=10"},"https://jsonplaceholder.typicode.com/todos?_start=0&_limit=10")," menggunakan metode ",(0,r.kt)("inlineCode",{parentName:"p"},"http.get"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dart"},'class ToDoPage extends StatefulWidget {\n    const ToDoPage({Key? key}) : super(key: key);\n\n    @override\n    _ToDoPageState createState() => _ToDoPageState();\n}\n\nclass _ToDoPageState extends State<ToDoPage> {\n    Future<List<ToDo>> fetchToDo() async {\n        var url = Uri.parse(\'https://jsonplaceholder.typicode.com/todos?_start=0&_limit=10\');\n        var response = await http.get(\n        url,\n        headers: {\n            "Access-Control-Allow-Origin": "*",\n            "Content-Type": "application/json",\n        },\n        );\n\n        // melakukan decode response menjadi bentuk json\n        var data = jsonDecode(utf8.decode(response.bodyBytes));\n\n        // melakukan konversi data json menjadi object ToDo\n        List<ToDo> listToDo = [];\n        for (var d in data) {\n        if (d != null) {\n            listToDo.add(ToDo.fromJson(d));\n        }\n        }\n\n        return listToDo;\n    }\n    ...\n}\n')))),(0,r.kt)("h2",{id:"tutorial-menampilkan-data-dari-web-service"},"Tutorial: Menampilkan Data dari Web Service"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Pada file ",(0,r.kt)("inlineCode",{parentName:"p"},"main.dart")," dan ",(0,r.kt)("inlineCode",{parentName:"p"},"form.dart")," tambahkan kode berikut untuk menambahkan menu To Do pada drawer yang telah kita buat (letakkan di bawah menu ListTile form)."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"ListTile(\n            title: const Text('To Do'),\n            onTap: () {\n                // Route menu ke halaman to do\n                Navigator.pushReplacement(\n                context,\n                MaterialPageRoute(builder: (context) => const ToDoPage()),\n                );\n            },\n        ),\n")),(0,r.kt)("p",{parentName:"li"},"Sehingga kodenya menjadi seperti ini:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"...\nListTile(\n    title: const Text('Form'),\n    onTap: () {\n    // Route menu ke halaman form\n    Navigator.pushReplacement(\n        context,\n        MaterialPageRoute(builder: (context) => const MyFormPage()),\n        );\n    },\n),\nListTile(\n        title: const Text('To Do'),\n        onTap: () {\n        // Route menu ke halaman to do\n        Navigator.pushReplacement(\n            context,\n            MaterialPageRoute(builder: (context) => const ToDoPage()),\n            );\n        },\n    ),\n...\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Pada bagian ",(0,r.kt)("inlineCode",{parentName:"p"},"Widget(BuildContext context)"),", tambahkan kode berikut setelah ",(0,r.kt)("inlineCode",{parentName:"p"},"return"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"Scaffold(\n    appBar: AppBar(\n        title: const Text('To Do'),\n    ),\n    drawer: Drawer(\n        child: Column(\n        children: [\n            // Menambahkan clickable menu\n            ListTile(\n            title: const Text('Counter'),\n            onTap: () {\n                // Route menu ke halaman utama\n                Navigator.pushReplacement(\n                context,\n                MaterialPageRoute(builder: (context) => const MyApp()),\n                );\n            },\n            ),\n            ListTile(\n            title: const Text('Form'),\n            onTap: () {\n                // Route menu ke halaman form\n                Navigator.pushReplacement(\n                context,\n                MaterialPageRoute(builder: (context) => const MyFormPage()),\n                );\n            },\n            ),\n            ListTile(\n            title: const Text('ToDo'),\n            onTap: () {\n                // Route menu ke halaman to do\n                Navigator.pushReplacement(\n                context,\n                MaterialPageRoute(builder: (context) => const ToDoPage()),\n                );\n            },\n            ),\n        ],\n        ),\n    ),\n    body: FutureBuilder(\n        future: fetchToDo(),\n        builder: (context, AsyncSnapshot snapshot) {\n            if (snapshot.data == null) {\n            return const Center(child: CircularProgressIndicator());\n            } else {\n            if (!snapshot.hasData) {\n                return Column(\n                children: const [\n                    Text(\n                    \"Tidak ada to do list :(\",\n                    style: TextStyle(\n                        color: Color(0xff59A5D8),\n                        fontSize: 20),\n                    ),\n                    SizedBox(height: 8),\n                ],\n                );\n            } else {\n                return ListView.builder(\n                    itemCount: snapshot.data!.length,\n                    itemBuilder: (_, index)=> Container(\n                    margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),\n                    padding: const EdgeInsets.all(20.0),\n                    decoration: BoxDecoration(\n                        color:Colors.white,\n                        borderRadius: BorderRadius.circular(15.0),\n                        boxShadow: const [\n                        BoxShadow(\n                            color: Colors.black,\n                            blurRadius: 2.0\n                        )\n                        ]\n                    ),\n                    child: Column(\n                        mainAxisAlignment: MainAxisAlignment.start,\n                        crossAxisAlignment: CrossAxisAlignment.start,\n                        children: [\n                        Text(\n                            \"${snapshot.data![index].title}\",\n                            style: const TextStyle(\n                            fontSize: 18.0,\n                            fontWeight: FontWeight.bold,\n                            ),\n                        ),\n                        const SizedBox(height: 10),\n                        Text(\"${snapshot.data![index].completed}\"),\n                        ],\n                    ),\n                    )\n                );\n            }\n            }\n        }\n    )\n);\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"Restart")," aplikasi dengan menekan tombol ",(0,r.kt)("inlineCode",{parentName:"p"},"r")," pada ",(0,r.kt)("em",{parentName:"p"},"command line")," atau ",(0,r.kt)("em",{parentName:"p"},"terminal")," di tempat kamu menjalankan Flutter. Hasilnya akan seperti gambar di bawah."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://i.ibb.co/q1tqwqR/todo-page-example.png",alt:"Example App"})))),(0,r.kt)("h2",{id:"akhir-kata"},"Akhir Kata"),(0,r.kt)("p",null,"Selamat, kamu telah mempelajari mengenai model dan ",(0,r.kt)("em",{parentName:"p"},"web service")," pada Flutter!"),(0,r.kt)("p",null,"Jika kamu ingin mencoba tantangan, maka cobalah untuk menerapkan hal berikut pada tutorial ini."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Lakukan ",(0,r.kt)("em",{parentName:"li"},"refactor")," pada ",(0,r.kt)("em",{parentName:"li"},"method")," ",(0,r.kt)("inlineCode",{parentName:"li"},"fetchToDo")," ke file terpisah.")),(0,r.kt)("h2",{id:"referensi-tambahan"},"Referensi Tambahan"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.flutter.dev/cookbook/networking/fetch-data"},"Fetch Data From the Internet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://thegrowingdeveloper.org/coding-blog/how-to-create-models-in-flutter-dart"},"How to create models in Flutter Dart"))),(0,r.kt)("h2",{id:"kontributor"},"Kontributor"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Zuhal 'Alimul Hadi"),(0,r.kt)("li",{parentName:"ul"},"Sabyna Maharani"),(0,r.kt)("li",{parentName:"ul"},"Brandon Ivander"),(0,r.kt)("li",{parentName:"ul"},"Muhammad Athallah")))}k.isMDXComponent=!0}}]);